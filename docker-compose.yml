services:
  # api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     args:
  #       APP_NAME: api
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - db
  #     - minio
  #     - redis
  #     - rabbitmq
  #   env_file:
  #     - .env
  #   restart: unless-stopped

  # worker:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     args:
  #       APP_NAME: worker
  #   depends_on:
  #     - rabbitmq
  #   env_file:
  #     - .env
  #   restart: unless-stopped

  db:
    image: postgres:latest
    container_name: manga-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: manga
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpassword
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    restart: unless-stopped

  test_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpassword
      POSTGRES_DB: manga_db_test
    ports:
      - "5433:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    restart: unless-stopped

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "1025:1025" # SMTP port
      - "8025:8025" # Web UI port
    restart: unless-stopped

volumes:
  db-data:
  minio_data:
